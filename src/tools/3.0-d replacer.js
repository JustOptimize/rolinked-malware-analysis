const code = 'abc';

function replaceDCalls(code) {
	// Regular expression to find occurrences of D(number, number) including scientific notation and negative numbers
	const regex = /D\(([^)]+)\)/g;

	// Function to replace each match with the result of the function call wrapped in backticks
	return code.replace(regex, (match, p1, p2) => {
		// Parse the numbers considering scientific notation and other formats
		const z = parseInt(p1, 10);
		const N = parseInt(p2, 10);

		// Get the result and escape backslashes
		const result = D(z, N)?.replace(/\\/g, '\\\\');
		return `\`${result}\``;
	});
}

const newCode = replaceDCalls(code);
console.log(newCode);
