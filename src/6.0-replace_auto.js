function deobfuscateString(inputString, mapping, name) {
	// Regular expression to match the pattern R[`KEY`]
	// const regex = /R\[`(.*?)`\]/g;

	const regex = new RegExp(`${name}\\[\`(.*?)\`\]`, 'g');

	// Replace function to substitute the matched pattern with the corresponding value from the mapping
	const replacedString = inputString.replace(regex, (match, key) => {
		if (mapping.hasOwnProperty(key)) {
			const value = mapping[key];

			// If value does not exist, return the key
			if (value === undefined) {
				console.log(`Key: ${key} does not exist in the mapping`);
				return key;
			}

			// Check if the value is a string
			return typeof value === 'string' ? `\`${value}\`` : value;
		}
		return match;
	});

	return replacedString;
}
